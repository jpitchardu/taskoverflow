{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 18, "column": 0}, "map": {"version":3,"sources":["file:///home/jpichardo/development/study/taskoverflow/client/src/components/TaskComposer.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const TaskComposer = registerClientReference(\n    function() { throw new Error(\"Attempted to call TaskComposer() from the server but TaskComposer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/TaskComposer.tsx <module evaluation>\",\n    \"TaskComposer\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,4WAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,iEACA","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file:///home/jpichardo/development/study/taskoverflow/client/src/components/TaskComposer.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const TaskComposer = registerClientReference(\n    function() { throw new Error(\"Attempted to call TaskComposer() from the server but TaskComposer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/TaskComposer.tsx\",\n    \"TaskComposer\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,eAAe,CAAA,GAAA,4WAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,6CACA","debugId":null}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":["file:///home/jpichardo/development/study/taskoverflow/client/src/hooks/tasks.ts"],"sourcesContent":["import { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\n\nconst API_URL = \"http://localhost:5000/api\";\n\ntype Task = {\n  id: string;\n  title: string;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport interface CreateTaskPayload {\n  title: string;\n}\n\nexport interface UpdateTaskPayload {\n  id: string;\n  title: string;\n}\n\nexport function useTasks() {\n  return useQuery({\n    queryKey: [\"tasks\"],\n    queryFn: async () => {\n      const response = await fetch(`${API_URL}/tasks`);\n      const data = await response.json();\n      return data.tasks as Task[];\n    },\n  });\n}\n\nexport function useTask(id: string) {\n  return useQuery({\n    queryKey: [\"tasks\", id],\n    queryFn: async () => {\n      const response = await fetch(`${API_URL}/tasks/${id}`);\n      const data = await response.json();\n      return data.task as Task;\n    },\n  });\n}\n\nexport function useCreateTask() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: async (task: CreateTaskPayload) => {\n      const response = await fetch(`${API_URL}/tasks`, {\n        method: \"POST\",\n        body: JSON.stringify(task),\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Failed to create task\");\n      }\n\n      const data = await response.json();\n      return data.task as Task;\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"tasks\"] });\n    },\n  });\n}\n\nexport function useUpdateTask() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: async (task: UpdateTaskPayload) => {\n      const response = await fetch(`${API_URL}/tasks/${task.id}`, {\n        method: \"PATCH\",\n        body: JSON.stringify(task),\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Failed to update task\");\n      }\n\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"tasks\"] });\n    },\n  });\n}\n\nexport function useDeleteTask() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: async (id: string) => {\n      const response = await fetch(`${API_URL}/tasks/${id}`, {\n        method: \"DELETE\",\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Failed to delete task\");\n      }\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"tasks\"] });\n    },\n  });\n}\n"],"names":[],"mappings":";;;;;;;AAAA;AAAA;AAAA;;AAEA,MAAM,UAAU;AAkBT,SAAS;IACd,OAAO,CAAA,GAAA,2QAAA,CAAA,WAAQ,AAAD,EAAE;QACd,UAAU;YAAC;SAAQ;QACnB,SAAS;YACP,MAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,MAAM,CAAC;YAC/C,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,OAAO,KAAK,KAAK;QACnB;IACF;AACF;AAEO,SAAS,QAAQ,EAAU;IAChC,OAAO,CAAA,GAAA,2QAAA,CAAA,WAAQ,AAAD,EAAE;QACd,UAAU;YAAC;YAAS;SAAG;QACvB,SAAS;YACP,MAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,OAAO,EAAE,IAAI;YACrD,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,OAAO,KAAK,IAAI;QAClB;IACF;AACF;AAEO,SAAS;IACd,MAAM,cAAc,CAAA,GAAA,sRAAA,CAAA,iBAAc,AAAD;IAEjC,OAAO,CAAA,GAAA,8QAAA,CAAA,cAAW,AAAD,EAAE;QACjB,YAAY,OAAO;YACjB,MAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,MAAM,CAAC,EAAE;gBAC/C,QAAQ;gBACR,MAAM,KAAK,SAAS,CAAC;YACvB;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MAAM;YAClB;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,OAAO,KAAK,IAAI;QAClB;QACA,WAAW;YACT,YAAY,iBAAiB,CAAC;gBAAE,UAAU;oBAAC;iBAAQ;YAAC;QACtD;IACF;AACF;AAEO,SAAS;IACd,MAAM,cAAc,CAAA,GAAA,sRAAA,CAAA,iBAAc,AAAD;IAEjC,OAAO,CAAA,GAAA,8QAAA,CAAA,cAAW,AAAD,EAAE;QACjB,YAAY,OAAO;YACjB,MAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE;gBAC1D,QAAQ;gBACR,MAAM,KAAK,SAAS,CAAC;YACvB;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MAAM;YAClB;YAEA,OAAO,SAAS,IAAI;QACtB;QACA,WAAW;YACT,YAAY,iBAAiB,CAAC;gBAAE,UAAU;oBAAC;iBAAQ;YAAC;QACtD;IACF;AACF;AAEO,SAAS;IACd,MAAM,cAAc,CAAA,GAAA,sRAAA,CAAA,iBAAc,AAAD;IAEjC,OAAO,CAAA,GAAA,8QAAA,CAAA,cAAW,AAAD,EAAE;QACjB,YAAY,OAAO;YACjB,MAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,OAAO,EAAE,IAAI,EAAE;gBACrD,QAAQ;YACV;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MAAM;YAClB;QACF;QACA,WAAW;YACT,YAAY,iBAAiB,CAAC;gBAAE,UAAU;oBAAC;iBAAQ;YAAC;QACtD;IACF;AACF","debugId":null}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file:///home/jpichardo/development/study/taskoverflow/client/src/components/TaskListDetail.tsx"],"sourcesContent":["import { useDeleteTask, useUpdateTask } from \"@/hooks/tasks\";\n\ntype TaskListDetailProps = {\n  id: string;\n  title: string;\n};\n\nexport function TaskListDetail({ id, title }: TaskListDetailProps) {\n  const { mutate: deleteTask } = useDeleteTask();\n  const { mutate: updateTask } = useUpdateTask();\n\n  return (\n    <div className=\"flex flex-row gap-2 p-4 border-b border-gray-200\">\n      <h2>{title}</h2>\n      <button onClick={() => deleteTask(id)}>Delete</button>\n      <button onClick={() => updateTask({ id, title })}>Update</button>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAOO,SAAS,eAAe,EAAE,EAAE,EAAE,KAAK,EAAuB;IAC/D,MAAM,EAAE,QAAQ,UAAU,EAAE,GAAG,CAAA,GAAA,qHAAA,CAAA,gBAAa,AAAD;IAC3C,MAAM,EAAE,QAAQ,UAAU,EAAE,GAAG,CAAA,GAAA,qHAAA,CAAA,gBAAa,AAAD;IAE3C,qBACE,6WAAC;QAAI,WAAU;;0BACb,6WAAC;0BAAI;;;;;;0BACL,6WAAC;gBAAO,SAAS,IAAM,WAAW;0BAAK;;;;;;0BACvC,6WAAC;gBAAO,SAAS,IAAM,WAAW;wBAAE;wBAAI;oBAAM;0BAAI;;;;;;;;;;;;AAGxD","debugId":null}},
    {"offset": {"line": 206, "column": 0}, "map": {"version":3,"sources":["file:///home/jpichardo/development/study/taskoverflow/client/src/components/TaskList.tsx"],"sourcesContent":["import { TaskComposer } from \"@/components/TaskComposer\";\nimport { TaskListDetail } from \"@/components/TaskListDetail\";\nimport { useTasks } from \"@/hooks/tasks\";\n\nexport function TaskList() {\n  const { data: tasks } = useTasks();\n\n  if (!tasks) return <div>Loading...</div>;\n\n  return (\n    <div className=\"flex flex-col gap-2\">\n      <TaskComposer />\n      {tasks.map((task) => (\n        <TaskListDetail key={task.id} id={task.id} title={task.title} />\n      ))}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAEO,SAAS;IACd,MAAM,EAAE,MAAM,KAAK,EAAE,GAAG,CAAA,GAAA,qHAAA,CAAA,WAAQ,AAAD;IAE/B,IAAI,CAAC,OAAO,qBAAO,6WAAC;kBAAI;;;;;;IAExB,qBACE,6WAAC;QAAI,WAAU;;0BACb,6WAAC,kIAAA,CAAA,eAAY;;;;;YACZ,MAAM,GAAG,CAAC,CAAC,qBACV,6WAAC,oIAAA,CAAA,iBAAc;oBAAe,IAAI,KAAK,EAAE;oBAAE,OAAO,KAAK,KAAK;mBAAvC,KAAK,EAAE;;;;;;;;;;;AAIpC","debugId":null}},
    {"offset": {"line": 253, "column": 0}, "map": {"version":3,"sources":["file:///home/jpichardo/development/study/taskoverflow/client/src/app/page.tsx"],"sourcesContent":["import { TaskList } from \"@/components/TaskList\";\n\nexport default function Home() {\n  return (\n    <div className=\"flex flex-col gap-2\">\n      <TaskList />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,6WAAC;QAAI,WAAU;kBACb,cAAA,6WAAC,8HAAA,CAAA,WAAQ;;;;;;;;;;AAGf","debugId":null}}]
}