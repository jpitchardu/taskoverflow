{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/jpichardo/development/study/taskoverflow/client/src/hooks/tasks.ts"],"sourcesContent":["import { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\n\nconst API_URL = \"http://192.168.1.92:5000\";\n\ntype Task = {\n  id: string;\n  title: string;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport interface CreateTaskPayload {\n  title: string;\n}\n\nexport interface UpdateTaskPayload {\n  id: string;\n  title: string;\n}\n\nexport function useTasks() {\n  return useQuery({\n    queryKey: [\"tasks\"],\n    queryFn: async () => {\n      const response = await fetch(`${API_URL}/task`);\n      const data = await response.json();\n      return data.tasks as Task[];\n    },\n  });\n}\n\nexport function useTask(id: string) {\n  return useQuery({\n    queryKey: [\"tasks\", id],\n    queryFn: async () => {\n      const response = await fetch(`${API_URL}/task/${id}`);\n      const data = await response.json();\n      return data.task as Task;\n    },\n  });\n}\n\nexport function useCreateTask() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: async (task: CreateTaskPayload) => {\n      const response = await fetch(`${API_URL}/task`, {\n        method: \"POST\",\n        body: JSON.stringify(task),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Failed to create task\");\n      }\n\n      const data = await response.json();\n      return data.task as Task;\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"tasks\"] });\n    },\n  });\n}\n\nexport function useUpdateTask() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: async (task: UpdateTaskPayload) => {\n      const response = await fetch(`${API_URL}/task/${task.id}`, {\n        method: \"PATCH\",\n        body: JSON.stringify(task),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Failed to update task\");\n      }\n\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"tasks\"] });\n    },\n  });\n}\n\nexport function useDeleteTask() {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: async (id: string) => {\n      const response = await fetch(`${API_URL}/task/${id}`, {\n        method: \"DELETE\",\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Failed to delete task\");\n      }\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"tasks\"] });\n    },\n  });\n}\n"],"names":[],"mappings":";;;;;;;AAAA;AAAA;AAAA;;;AAEA,MAAM,UAAU;AAkBT,SAAS;;IACd,OAAO,CAAA,GAAA,8QAAA,CAAA,WAAQ,AAAD,EAAE;QACd,UAAU;YAAC;SAAQ;QACnB,OAAO;iCAAE;gBACP,MAAM,WAAW,MAAM,MAAM,AAAC,GAAU,OAAR,SAAQ;gBACxC,MAAM,OAAO,MAAM,SAAS,IAAI;gBAChC,OAAO,KAAK,KAAK;YACnB;;IACF;AACF;GATgB;;QACP,8QAAA,CAAA,WAAQ;;;AAUV,SAAS,QAAQ,EAAU;;IAChC,OAAO,CAAA,GAAA,8QAAA,CAAA,WAAQ,AAAD,EAAE;QACd,UAAU;YAAC;YAAS;SAAG;QACvB,OAAO;gCAAE;gBACP,MAAM,WAAW,MAAM,MAAM,AAAC,GAAkB,OAAhB,SAAQ,UAAW,OAAH;gBAChD,MAAM,OAAO,MAAM,SAAS,IAAI;gBAChC,OAAO,KAAK,IAAI;YAClB;;IACF;AACF;IATgB;;QACP,8QAAA,CAAA,WAAQ;;;AAUV,SAAS;;IACd,MAAM,cAAc,CAAA,GAAA,yRAAA,CAAA,iBAAc,AAAD;IAEjC,OAAO,CAAA,GAAA,iRAAA,CAAA,cAAW,AAAD,EAAE;QACjB,UAAU;yCAAE,OAAO;gBACjB,MAAM,WAAW,MAAM,MAAM,AAAC,GAAU,OAAR,SAAQ,UAAQ;oBAC9C,QAAQ;oBACR,MAAM,KAAK,SAAS,CAAC;oBACrB,SAAS;wBACP,gBAAgB;oBAClB;gBACF;gBAEA,IAAI,CAAC,SAAS,EAAE,EAAE;oBAChB,MAAM,IAAI,MAAM;gBAClB;gBAEA,MAAM,OAAO,MAAM,SAAS,IAAI;gBAChC,OAAO,KAAK,IAAI;YAClB;;QACA,SAAS;yCAAE;gBACT,YAAY,iBAAiB,CAAC;oBAAE,UAAU;wBAAC;qBAAQ;gBAAC;YACtD;;IACF;AACF;IAxBgB;;QACM,yRAAA,CAAA,iBAAc;QAE3B,iRAAA,CAAA,cAAW;;;AAuBb,SAAS;;IACd,MAAM,cAAc,CAAA,GAAA,yRAAA,CAAA,iBAAc,AAAD;IAEjC,OAAO,CAAA,GAAA,iRAAA,CAAA,cAAW,AAAD,EAAE;QACjB,UAAU;yCAAE,OAAO;gBACjB,MAAM,WAAW,MAAM,MAAM,AAAC,GAAkB,OAAhB,SAAQ,UAAgB,OAAR,KAAK,EAAE,GAAI;oBACzD,QAAQ;oBACR,MAAM,KAAK,SAAS,CAAC;oBACrB,SAAS;wBACP,gBAAgB;oBAClB;gBACF;gBAEA,IAAI,CAAC,SAAS,EAAE,EAAE;oBAChB,MAAM,IAAI,MAAM;gBAClB;gBAEA,OAAO,SAAS,IAAI;YACtB;;QACA,SAAS;yCAAE;gBACT,YAAY,iBAAiB,CAAC;oBAAE,UAAU;wBAAC;qBAAQ;gBAAC;YACtD;;IACF;AACF;IAvBgB;;QACM,yRAAA,CAAA,iBAAc;QAE3B,iRAAA,CAAA,cAAW;;;AAsBb,SAAS;;IACd,MAAM,cAAc,CAAA,GAAA,yRAAA,CAAA,iBAAc,AAAD;IAEjC,OAAO,CAAA,GAAA,iRAAA,CAAA,cAAW,AAAD,EAAE;QACjB,UAAU;yCAAE,OAAO;gBACjB,MAAM,WAAW,MAAM,MAAM,AAAC,GAAkB,OAAhB,SAAQ,UAAW,OAAH,KAAM;oBACpD,QAAQ;gBACV;gBAEA,IAAI,CAAC,SAAS,EAAE,EAAE;oBAChB,MAAM,IAAI,MAAM;gBAClB;YACF;;QACA,SAAS;yCAAE;gBACT,YAAY,iBAAiB,CAAC;oBAAE,UAAU;wBAAC;qBAAQ;gBAAC;YACtD;;IACF;AACF;IAjBgB;;QACM,yRAAA,CAAA,iBAAc;QAE3B,iRAAA,CAAA,cAAW","debugId":null}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":["file:///home/jpichardo/development/study/taskoverflow/client/src/components/TaskComposer.tsx"],"sourcesContent":["\"use client\";\n\nimport { useCreateTask } from \"@/hooks/tasks\";\nimport { useCallback, useState } from \"react\";\n\nexport function TaskComposer() {\n  const { mutate: createTask } = useCreateTask();\n\n  const [title, setTitle] = useState(\"\");\n\n  const onChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const onClick = useCallback(() => {\n    createTask({ title });\n    setTitle(\"\");\n  }, [createTask, title]);\n\n  return (\n    <div className=\"flex flex-row gap-2 p-4 border-b border-gray-200\">\n      <input type=\"text\" value={title} onChange={onChange} />\n      <button onClick={onClick}>Create</button>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAKO,SAAS;;IACd,MAAM,EAAE,QAAQ,UAAU,EAAE,GAAG,CAAA,GAAA,wHAAA,CAAA,gBAAa,AAAD;IAE3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,4RAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,MAAM,WAAW,CAAA,GAAA,4RAAA,CAAA,cAAW,AAAD;8CAAE,CAAC;YAC5B,SAAS,EAAE,MAAM,CAAC,KAAK;QACzB;6CAAG,EAAE;IAEL,MAAM,UAAU,CAAA,GAAA,4RAAA,CAAA,cAAW,AAAD;6CAAE;YAC1B,WAAW;gBAAE;YAAM;YACnB,SAAS;QACX;4CAAG;QAAC;QAAY;KAAM;IAEtB,qBACE,4TAAC;QAAI,WAAU;;0BACb,4TAAC;gBAAM,MAAK;gBAAO,OAAO;gBAAO,UAAU;;;;;;0BAC3C,4TAAC;gBAAO,SAAS;0BAAS;;;;;;;;;;;;AAGhC;GApBgB;;QACiB,wHAAA,CAAA,gBAAa;;;KAD9B","debugId":null}},
    {"offset": {"line": 249, "column": 0}, "map": {"version":3,"sources":["file:///home/jpichardo/development/study/taskoverflow/client/src/components/TaskListDetail.tsx"],"sourcesContent":["\"use client\";\n\nimport { useDeleteTask, useUpdateTask } from \"@/hooks/tasks\";\n\ntype TaskListDetailProps = {\n  id: string;\n  title: string;\n};\n\nexport function TaskListDetail({ id, title }: TaskListDetailProps) {\n  const { mutate: deleteTask } = useDeleteTask();\n  const { mutate: updateTask } = useUpdateTask();\n\n  return (\n    <div className=\"flex flex-row gap-2 p-4 border-b border-gray-200\">\n      <h2>{title}</h2>\n      <button onClick={() => deleteTask(id)}>Delete</button>\n      <button onClick={() => updateTask({ id, title })}>Update</button>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;;;AAFA;;AASO,SAAS,eAAe,KAAkC;QAAlC,EAAE,EAAE,EAAE,KAAK,EAAuB,GAAlC;;IAC7B,MAAM,EAAE,QAAQ,UAAU,EAAE,GAAG,CAAA,GAAA,wHAAA,CAAA,gBAAa,AAAD;IAC3C,MAAM,EAAE,QAAQ,UAAU,EAAE,GAAG,CAAA,GAAA,wHAAA,CAAA,gBAAa,AAAD;IAE3C,qBACE,4TAAC;QAAI,WAAU;;0BACb,4TAAC;0BAAI;;;;;;0BACL,4TAAC;gBAAO,SAAS,IAAM,WAAW;0BAAK;;;;;;0BACvC,4TAAC;gBAAO,SAAS,IAAM,WAAW;wBAAE;wBAAI;oBAAM;0BAAI;;;;;;;;;;;;AAGxD;GAXgB;;QACiB,wHAAA,CAAA,gBAAa;QACb,wHAAA,CAAA,gBAAa;;;KAF9B","debugId":null}},
    {"offset": {"line": 317, "column": 0}, "map": {"version":3,"sources":["file:///home/jpichardo/development/study/taskoverflow/client/src/components/TaskList.tsx"],"sourcesContent":["\"use client\";\n\nimport { TaskComposer } from \"@/components/TaskComposer\";\nimport { TaskListDetail } from \"@/components/TaskListDetail\";\nimport { useTasks } from \"@/hooks/tasks\";\n\nexport function TaskList() {\n  const { data: tasks, isPending } = useTasks();\n\n  if (isPending) return <div>Loading...</div>;\n\n  return (\n    <div className=\"flex flex-col gap-2\">\n      <TaskComposer />\n      {tasks &&\n        tasks.length > 0 &&\n        tasks.map((task) => (\n          <TaskListDetail key={task.id} id={task.id} title={task.title} />\n        ))}\n      {tasks && tasks.length === 0 && <div>No tasks</div>}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAMO,SAAS;;IACd,MAAM,EAAE,MAAM,KAAK,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,wHAAA,CAAA,WAAQ,AAAD;IAE1C,IAAI,WAAW,qBAAO,4TAAC;kBAAI;;;;;;IAE3B,qBACE,4TAAC;QAAI,WAAU;;0BACb,4TAAC,qIAAA,CAAA,eAAY;;;;;YACZ,SACC,MAAM,MAAM,GAAG,KACf,MAAM,GAAG,CAAC,CAAC,qBACT,4TAAC,uIAAA,CAAA,iBAAc;oBAAe,IAAI,KAAK,EAAE;oBAAE,OAAO,KAAK,KAAK;mBAAvC,KAAK,EAAE;;;;;YAE/B,SAAS,MAAM,MAAM,KAAK,mBAAK,4TAAC;0BAAI;;;;;;;;;;;;AAG3C;GAhBgB;;QACqB,wHAAA,CAAA,WAAQ;;;KAD7B","debugId":null}}]
}